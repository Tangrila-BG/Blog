@model Post

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Posts", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)


        @if (Model.Files.Any(f => f.FileType == FileType.Image))
        {
            <div class="form-group">
                <span class="control-label col-md-2"><strong>Current Image</strong></span>
                <div class="col-md-10">
                    <img src="~/File?id=@Model.Files.First(f => f.FileType == FileType.Image).FileId" alt="image" />
                </div>
            </div>
        }

        <div class="form-group">
            @Html.Label("Image", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label class="btn btn-primary">
                    <span class="glyphicon glyphicon-file"></span> Browse&hellip;
                    <input type="file" style="display: none" id="imageUpload" name="upload" accept=".jpeg,.jpg,.png" />
                </label>
                <label id="imageLoaded" style="display: none">
                    <span id="glyphLoaded"></span> <span id="infoLoaded"></span>
                </label>
                <p class="text-info">Acceptable formats: JPEG, JPG, PNG</p>
                <div>
                    @Html.ValidationMessageFor(model => model.Files, "", htmlAttributes: new { @class = "error-text" })
                </div>
                <div id="preview" style="display: none">
                    <img id="imagePreview" width="250" height="250" alt="preview" />
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "input-validation-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "error-text" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control", rows = 10 } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (User.IsInRole("Administrators"))
        {

            <div class="form-group">

                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control datefield", @Value = ViewBag.Date } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })

                </div>
            </div>
        }
        @if (User.IsInRole("Administrators"))
                {
            <div class="form-group">
                @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select name="AuthorId">
                        @foreach (var author in ViewBag.Authors)
                    {
                            <option value="@author.Id">@author.UserName</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })

                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery.functionality-imageupload.js"></script>
